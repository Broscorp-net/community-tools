package com.community.tools.util.statemachie;

import static com.community.tools.util.statemachie.Event.ADD_GIT_NAME;
import static com.community.tools.util.statemachie.Event.AGREE_LICENSE;
import static com.community.tools.util.statemachie.Event.GET_THE_FIRST_TASK;
import static com.community.tools.util.statemachie.State.ADDED_GIT;
import static com.community.tools.util.statemachie.State.NEW_USER;
import static com.community.tools.util.statemachie.State.GOT_THE_FIRST_TASK;
import static com.community.tools.util.statemachie.State.AGREED_LICENSE;
import static org.junit.jupiter.api.Assertions.assertEquals;

import org.apache.commons.lang3.StringEscapeUtils;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.ApplicationContext;
import org.springframework.statemachine.StateMachine;
import org.springframework.statemachine.config.StateMachineFactory;
import org.springframework.statemachine.persist.StateMachinePersister;
import org.springframework.statemachine.test.StateMachineTestPlan;
import org.springframework.statemachine.test.StateMachineTestPlanBuilder;
import org.springframework.test.context.junit4.SpringRunner;

@RunWith(SpringRunner.class)
@SpringBootTest
public class StateMachineConfTest {
  @Value("${secondAgreeMessage}")
  private String secondAgreeMessage;
  @Value("${agreeMessage}")
  private String agreeMessage;
  @Value("${firstAgreeMessage}")
  private String firstAgreeMessage;
  @Autowired
  private StateMachineFactory<State, Event> factory;
  @Autowired
  private StateMachinePersister<State, Event, String> persister;


  @Autowired
  private ApplicationContext conf;

  @Test
  public void contextLoads() {
  }


  @Test
  public void stringEscapeTest(){
    firstAgreeMessage = "[{\"type\": \"header\",\"text\": {\"type\": \"plain_text\",\"text\": \"ОСНОВНЫЕ ПРАВИЛА\",\"emoji\": true}},{\"type\": \"divider\"},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \" 1.   Код форматируется в соответствии с *Google code style*. \\nНастройки для среды разработки (https://github.com/google/styleguide): \\n <https://github.com/google/styleguide/blob/gh-pages/intellij-java-google-style.xml|IntelliJ IDEA> \\n <https://github.com/google/styleguide/blob/gh-pages/eclipse-java-google-style.xml|Eclipse>\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"  2.   Все проекты собираются с помощью *Maven*.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"3. Файлы среды разработки и прочие временные файлы не должны попадать в репозиторий (https://github.com/github/gitignore).\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"4.   Покрытие кода *Unit tests* (Junit5): \\n\\tТест проверяет один кусок логики за раз. То есть, если необходимо проверить как работает метод, который мы проверяем с правильными данными – это _один тест_. Если необходимо проверить как работает метод с другими данными - _второй тест_. \\n\\n *Тест пишется по принципу:* \\n\\t 1.  Подготовка тестовых данных. \\n\\t 2.  Исполнение метода, который мы тестируем. \\n\\t 3.  Проверка результата.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"`If you agree, enter \\\"I agree\\\" to continue.`\"}]}]";
    secondAgreeMessage = "[{\"type\": \"header\",\"text\": {\"type\": \"plain_text\",\"text\": \"ПРАВИЛА ВЫПОЛНЕНИЯ ЗАДАНИЯ\",\"emoji\": true}},{\"type\": \"divider\"},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"Первое, что тебе нужно сделать - *Fork* репозиторий. Если ты форкнул репозиторий не только что, а уже давно работаешь над заданиями – тебе нужно обновиться. <thttps://help.github.com/en/github/collaborating-with-issues-and-pull-requests/merging-an-upstream-repository-into-your-fork|Инструкция как это сделать.> \\n Если ты дисциплинированно создавал ветки и не добавлял коммиты в master то все должно пройти без конфликтов =)\"}]},{\"type\": \"header\",\"text\": {\"type\": \"plain_text\",\"text\": \"Каждое новое задание необходимо выполнять по следующему алгоритму:\",\"emoji\": true}},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"1.    Каждое задание – *отдельная ветка*. Сделай ветку для задания и выполняй его в соответствии с инструкциями. Имя ветки должно *совпадать* с именем пакета задания.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"2.    Сделай *pull request* из этой ветки в наш репозиторий. Имя pull request должно *совпадать* с именем пакета задания.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"Мы проверим задание, подскажем что нужно исправить и примем задание. Если что-то надо поменять мы добавим метку *changes requested*.\\n\\nЕсли это произошло: \\n\\t1.   Исправь, пожалуйста, замечания. \\n\\t2.   Удали метку *changes requested* и добавь метку *ready for review*. \\n\\t3.   Метка *done* – задание принято.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"```Если ты не можешь менять метки – значит мы провтыкали и не добавили тебя в команду (или добавили, но приглашение не было принято, так что проверь почту) – напиши об этом Liliya Stepanovna в слеке.```\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"`If you agree, enter \\\"I agree\\\" to continue.`\"}]}]";
    agreeMessage = "[{\"type\": \"header\",\"text\": {\"type\": \"plain_text\",\"text\": \"Мы собрались здесь, чтобы стать крутыми комерческими разработчиками\uD83D\uDE0A\",\"emoji\": true}},{\"type\": \"context\",\"elements\": [{\"type\": \"plain_text\",\"text\": \"Для начала разберемся с определениями:\",\"emoji\": true}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"*Кто такой комерческий разработчик?* – Это человек, который приносит бизнесу деньги.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"*Как он может это делать?* – Разрабатывать софт, который зарабатывает или экономит деньги. Для этого он должен, затратив минимальное количество ресурсов, разработать софт, имеющий внутреннее и внешнее качество. \\n\\n \\t*Внешнее качество* – на сколько хорошо софт решает бизнес задачу. \\n \\t*Внутреннее качество* – на сколько легко созданный софт развивать, поддерживать, а также как легко его понимать другим членам команды.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"\\n *Какими навыками обладает крутой разработчик?* – Кроме технических навыков, крутой разработчик обладает «soft skills». В первую очередь это *умение помогать* членам команды. Работая в команде, мы можем приумножить результаты своих усилий, научив людей тому, что умеем, и учась у них. Важной частью этого навыка есть *умение критиковать конструктивно*. \\n\\n*Мы не говорим, что сделано плохо, а говорим, что можно сделать лучше и почему!*\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \" ```Итого, наши принципы: \\n\\tЦель работы разработчика – за минимальное время сделать максимально качественное ПО, мы хотим совершенствовать этот навык. \\n\\tВзаимопомощь – мы работаем в команде и помогаем друг другу.\\n\\tКонструктивная критика – мы говорим, что можно сделать лучше, а не что сделано плохо.```\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"`If you agree, enter \\\"I agree\\\" to continue.`\"}]}]";

    String firstFixedMessage = "[{\"type\": \"header\",\"text\": {\"type\": \"plain_text\",\"text\": \"\u041E\u0421\u041D\u041E\u0412\u041D\u042B\u0415 \u041F\u0420\u0410\u0412\u0418\u041B\u0410\",\"emoji\": true}},{\"type\": \"divider\"},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \" 1.   \u041A\u043E\u0434 \u0444\u043E\u0440\u043C\u0430\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044F \u0432 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 *Google code style*. \\n\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u0434\u043B\u044F \u0441\u0440\u0435\u0434\u044B \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0438 (https://github.com/google/styleguide): \\n <https://github.com/google/styleguide/blob/gh-pages/intellij-java-google-style.xml|IntelliJ IDEA> \\n <https://github.com/google/styleguide/blob/gh-pages/eclipse-java-google-style.xml|Eclipse>\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"  2.   \u0412\u0441\u0435 \u043F\u0440\u043E\u0435\u043A\u0442\u044B \u0441\u043E\u0431\u0438\u0440\u0430\u044E\u0442\u0441\u044F \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E *Maven*.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"3. \u0424\u0430\u0439\u043B\u044B \u0441\u0440\u0435\u0434\u044B \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0438 \u0438 \u043F\u0440\u043E\u0447\u0438\u0435 \u0432\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435 \u0444\u0430\u0439\u043B\u044B \u043D\u0435 \u0434\u043E\u043B\u0436\u043D\u044B \u043F\u043E\u043F\u0430\u0434\u0430\u0442\u044C \u0432 \u0440\u0435\u043F\u043E\u0437\u0438\u0442\u043E\u0440\u0438\u0439 (https://github.com/github/gitignore).\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"4.   \u041F\u043E\u043A\u0440\u044B\u0442\u0438\u0435 \u043A\u043E\u0434\u0430 *Unit tests* (Junit5): \\n\\t\u0422\u0435\u0441\u0442 \u043F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u0442 \u043E\u0434\u0438\u043D \u043A\u0443\u0441\u043E\u043A \u043B\u043E\u0433\u0438\u043A\u0438 \u0437\u0430 \u0440\u0430\u0437. \u0422\u043E \u0435\u0441\u0442\u044C, \u0435\u0441\u043B\u0438 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u043F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u044C \u043A\u0430\u043A \u0440\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u043C\u0435\u0442\u043E\u0434, \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u043C\u044B \u043F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u043C \u0441 \u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u044B\u043C\u0438 \u0434\u0430\u043D\u043D\u044B\u043C\u0438 \u2013 \u044D\u0442\u043E _\u043E\u0434\u0438\u043D \u0442\u0435\u0441\u0442_. \u0415\u0441\u043B\u0438 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u043F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u044C \u043A\u0430\u043A \u0440\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u043C\u0435\u0442\u043E\u0434 \u0441 \u0434\u0440\u0443\u0433\u0438\u043C\u0438 \u0434\u0430\u043D\u043D\u044B\u043C\u0438 - _\u0432\u0442\u043E\u0440\u043E\u0439 \u0442\u0435\u0441\u0442_. \\n\\n *\u0422\u0435\u0441\u0442 \u043F\u0438\u0448\u0435\u0442\u0441\u044F \u043F\u043E \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0443:* \\n\\t 1.  \u041F\u043E\u0434\u0433\u043E\u0442\u043E\u0432\u043A\u0430 \u0442\u0435\u0441\u0442\u043E\u0432\u044B\u0445 \u0434\u0430\u043D\u043D\u044B\u0445. \\n\\t 2.  \u0418\u0441\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u0435 \u043C\u0435\u0442\u043E\u0434\u0430, \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u043C\u044B \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043C. \\n\\t 3.  \u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0430.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"`If you agree, enter \\\"I agree\\\" to continue.`\"}]}]";
    String secondFixedMessage = "[{\"type\": \"header\",\"text\": {\"type\": \"plain_text\",\"text\": \"\u041F\u0420\u0410\u0412\u0418\u041B\u0410 \u0412\u042B\u041F\u041E\u041B\u041D\u0415\u041D\u0418\u042F \u0417\u0410\u0414\u0410\u041D\u0418\u042F\",\"emoji\": true}},{\"type\": \"divider\"},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"\u041F\u0435\u0440\u0432\u043E\u0435, \u0447\u0442\u043E \u0442\u0435\u0431\u0435 \u043D\u0443\u0436\u043D\u043E \u0441\u0434\u0435\u043B\u0430\u0442\u044C - *Fork* \u0440\u0435\u043F\u043E\u0437\u0438\u0442\u043E\u0440\u0438\u0439. \u0415\u0441\u043B\u0438 \u0442\u044B \u0444\u043E\u0440\u043A\u043D\u0443\u043B \u0440\u0435\u043F\u043E\u0437\u0438\u0442\u043E\u0440\u0438\u0439 \u043D\u0435 \u0442\u043E\u043B\u044C\u043A\u043E \u0447\u0442\u043E, \u0430 \u0443\u0436\u0435 \u0434\u0430\u0432\u043D\u043E \u0440\u0430\u0431\u043E\u0442\u0430\u0435\u0448\u044C \u043D\u0430\u0434 \u0437\u0430\u0434\u0430\u043D\u0438\u044F\u043C\u0438 \u2013 \u0442\u0435\u0431\u0435 \u043D\u0443\u0436\u043D\u043E \u043E\u0431\u043D\u043E\u0432\u0438\u0442\u044C\u0441\u044F. <thttps://help.github.com/en/github/collaborating-with-issues-and-pull-requests/merging-an-upstream-repository-into-your-fork|\u0418\u043D\u0441\u0442\u0440\u0443\u043A\u0446\u0438\u044F \u043A\u0430\u043A \u044D\u0442\u043E \u0441\u0434\u0435\u043B\u0430\u0442\u044C.> \\n \u0415\u0441\u043B\u0438 \u0442\u044B \u0434\u0438\u0441\u0446\u0438\u043F\u043B\u0438\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u043E \u0441\u043E\u0437\u0434\u0430\u0432\u0430\u043B \u0432\u0435\u0442\u043A\u0438 \u0438 \u043D\u0435 \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u043B \u043A\u043E\u043C\u043C\u0438\u0442\u044B \u0432 master \u0442\u043E \u0432\u0441\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u043F\u0440\u043E\u0439\u0442\u0438 \u0431\u0435\u0437 \u043A\u043E\u043D\u0444\u043B\u0438\u043A\u0442\u043E\u0432 =)\"}]},{\"type\": \"header\",\"text\": {\"type\": \"plain_text\",\"text\": \"\u041A\u0430\u0436\u0434\u043E\u0435 \u043D\u043E\u0432\u043E\u0435 \u0437\u0430\u0434\u0430\u043D\u0438\u0435 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u0432\u044B\u043F\u043E\u043B\u043D\u044F\u0442\u044C \u043F\u043E \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0435\u043C\u0443 \u0430\u043B\u0433\u043E\u0440\u0438\u0442\u043C\u0443:\",\"emoji\": true}},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"1.    \u041A\u0430\u0436\u0434\u043E\u0435 \u0437\u0430\u0434\u0430\u043D\u0438\u0435 \u2013 *\u043E\u0442\u0434\u0435\u043B\u044C\u043D\u0430\u044F \u0432\u0435\u0442\u043A\u0430*. \u0421\u0434\u0435\u043B\u0430\u0439 \u0432\u0435\u0442\u043A\u0443 \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u0438\u044F \u0438 \u0432\u044B\u043F\u043E\u043B\u043D\u044F\u0439 \u0435\u0433\u043E \u0432 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0438\u043D\u0441\u0442\u0440\u0443\u043A\u0446\u0438\u044F\u043C\u0438. \u0418\u043C\u044F \u0432\u0435\u0442\u043A\u0438 \u0434\u043E\u043B\u0436\u043D\u043E *\u0441\u043E\u0432\u043F\u0430\u0434\u0430\u0442\u044C* \u0441 \u0438\u043C\u0435\u043D\u0435\u043C \u043F\u0430\u043A\u0435\u0442\u0430 \u0437\u0430\u0434\u0430\u043D\u0438\u044F.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"2.    \u0421\u0434\u0435\u043B\u0430\u0439 *pull request* \u0438\u0437 \u044D\u0442\u043E\u0439 \u0432\u0435\u0442\u043A\u0438 \u0432 \u043D\u0430\u0448 \u0440\u0435\u043F\u043E\u0437\u0438\u0442\u043E\u0440\u0438\u0439. \u0418\u043C\u044F pull request \u0434\u043E\u043B\u0436\u043D\u043E *\u0441\u043E\u0432\u043F\u0430\u0434\u0430\u0442\u044C* \u0441 \u0438\u043C\u0435\u043D\u0435\u043C \u043F\u0430\u043A\u0435\u0442\u0430 \u0437\u0430\u0434\u0430\u043D\u0438\u044F.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"\u041C\u044B \u043F\u0440\u043E\u0432\u0435\u0440\u0438\u043C \u0437\u0430\u0434\u0430\u043D\u0438\u0435, \u043F\u043E\u0434\u0441\u043A\u0430\u0436\u0435\u043C \u0447\u0442\u043E \u043D\u0443\u0436\u043D\u043E \u0438\u0441\u043F\u0440\u0430\u0432\u0438\u0442\u044C \u0438 \u043F\u0440\u0438\u043C\u0435\u043C \u0437\u0430\u0434\u0430\u043D\u0438\u0435. \u0415\u0441\u043B\u0438 \u0447\u0442\u043E-\u0442\u043E \u043D\u0430\u0434\u043E \u043F\u043E\u043C\u0435\u043D\u044F\u0442\u044C \u043C\u044B \u0434\u043E\u0431\u0430\u0432\u0438\u043C \u043C\u0435\u0442\u043A\u0443 *changes requested*.\\n\\n\u0415\u0441\u043B\u0438 \u044D\u0442\u043E \u043F\u0440\u043E\u0438\u0437\u043E\u0448\u043B\u043E: \\n\\t1.   \u0418\u0441\u043F\u0440\u0430\u0432\u044C, \u043F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0437\u0430\u043C\u0435\u0447\u0430\u043D\u0438\u044F. \\n\\t2.   \u0423\u0434\u0430\u043B\u0438 \u043C\u0435\u0442\u043A\u0443 *changes requested* \u0438 \u0434\u043E\u0431\u0430\u0432\u044C \u043C\u0435\u0442\u043A\u0443 *ready for review*. \\n\\t3.   \u041C\u0435\u0442\u043A\u0430 *done* \u2013 \u0437\u0430\u0434\u0430\u043D\u0438\u0435 \u043F\u0440\u0438\u043D\u044F\u0442\u043E.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"```\u0415\u0441\u043B\u0438 \u0442\u044B \u043D\u0435 \u043C\u043E\u0436\u0435\u0448\u044C \u043C\u0435\u043D\u044F\u0442\u044C \u043C\u0435\u0442\u043A\u0438 \u2013 \u0437\u043D\u0430\u0447\u0438\u0442 \u043C\u044B \u043F\u0440\u043E\u0432\u0442\u044B\u043A\u0430\u043B\u0438 \u0438 \u043D\u0435 \u0434\u043E\u0431\u0430\u0432\u0438\u043B\u0438 \u0442\u0435\u0431\u044F \u0432 \u043A\u043E\u043C\u0430\u043D\u0434\u0443 (\u0438\u043B\u0438 \u0434\u043E\u0431\u0430\u0432\u0438\u043B\u0438, \u043D\u043E \u043F\u0440\u0438\u0433\u043B\u0430\u0448\u0435\u043D\u0438\u0435 \u043D\u0435 \u0431\u044B\u043B\u043E \u043F\u0440\u0438\u043D\u044F\u0442\u043E, \u0442\u0430\u043A \u0447\u0442\u043E \u043F\u0440\u043E\u0432\u0435\u0440\u044C \u043F\u043E\u0447\u0442\u0443) \u2013 \u043D\u0430\u043F\u0438\u0448\u0438 \u043E\u0431 \u044D\u0442\u043E\u043C Liliya Stepanovna \u0432 \u0441\u043B\u0435\u043A\u0435.```\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"`If you agree, enter \\\"I agree\\\" to continue.`\"}]}]";
    String agreeFixedMessage = "[{\"type\": \"header\",\"text\": {\"type\": \"plain_text\",\"text\": \"\u041C\u044B \u0441\u043E\u0431\u0440\u0430\u043B\u0438\u0441\u044C \u0437\u0434\u0435\u0441\u044C, \u0447\u0442\u043E\u0431\u044B \u0441\u0442\u0430\u0442\u044C \u043A\u0440\u0443\u0442\u044B\u043C\u0438 \u043A\u043E\u043C\u0435\u0440\u0447\u0435\u0441\u043A\u0438\u043C\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0430\u043C\u0438\uD83D\uDE0A\",\"emoji\": true}},{\"type\": \"context\",\"elements\": [{\"type\": \"plain_text\",\"text\": \"\u0414\u043B\u044F \u043D\u0430\u0447\u0430\u043B\u0430 \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043C\u0441\u044F \u0441 \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u044F\u043C\u0438:\",\"emoji\": true}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"*\u041A\u0442\u043E \u0442\u0430\u043A\u043E\u0439 \u043A\u043E\u043C\u0435\u0440\u0447\u0435\u0441\u043A\u0438\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A?* \u2013 \u042D\u0442\u043E \u0447\u0435\u043B\u043E\u0432\u0435\u043A, \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u043F\u0440\u0438\u043D\u043E\u0441\u0438\u0442 \u0431\u0438\u0437\u043D\u0435\u0441\u0443 \u0434\u0435\u043D\u044C\u0433\u0438.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"*\u041A\u0430\u043A \u043E\u043D \u043C\u043E\u0436\u0435\u0442 \u044D\u0442\u043E \u0434\u0435\u043B\u0430\u0442\u044C?* \u2013 \u0420\u0430\u0437\u0440\u0430\u0431\u0430\u0442\u044B\u0432\u0430\u0442\u044C \u0441\u043E\u0444\u0442, \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u0437\u0430\u0440\u0430\u0431\u0430\u0442\u044B\u0432\u0430\u0435\u0442 \u0438\u043B\u0438 \u044D\u043A\u043E\u043D\u043E\u043C\u0438\u0442 \u0434\u0435\u043D\u044C\u0433\u0438. \u0414\u043B\u044F \u044D\u0442\u043E\u0433\u043E \u043E\u043D \u0434\u043E\u043B\u0436\u0435\u043D, \u0437\u0430\u0442\u0440\u0430\u0442\u0438\u0432 \u043C\u0438\u043D\u0438\u043C\u0430\u043B\u044C\u043D\u043E\u0435 \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0440\u0435\u0441\u0443\u0440\u0441\u043E\u0432, \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u0441\u043E\u0444\u0442, \u0438\u043C\u0435\u044E\u0449\u0438\u0439 \u0432\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u0435\u0435 \u0438 \u0432\u043D\u0435\u0448\u043D\u0435\u0435 \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u043E. \\n\\n \\t*\u0412\u043D\u0435\u0448\u043D\u0435\u0435 \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u043E* \u2013 \u043D\u0430 \u0441\u043A\u043E\u043B\u044C\u043A\u043E \u0445\u043E\u0440\u043E\u0448\u043E \u0441\u043E\u0444\u0442 \u0440\u0435\u0448\u0430\u0435\u0442 \u0431\u0438\u0437\u043D\u0435\u0441 \u0437\u0430\u0434\u0430\u0447\u0443. \\n \\t*\u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u0435\u0435 \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u043E* \u2013 \u043D\u0430 \u0441\u043A\u043E\u043B\u044C\u043A\u043E \u043B\u0435\u0433\u043A\u043E \u0441\u043E\u0437\u0434\u0430\u043D\u043D\u044B\u0439 \u0441\u043E\u0444\u0442 \u0440\u0430\u0437\u0432\u0438\u0432\u0430\u0442\u044C, \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044C, \u0430 \u0442\u0430\u043A\u0436\u0435 \u043A\u0430\u043A \u043B\u0435\u0433\u043A\u043E \u0435\u0433\u043E \u043F\u043E\u043D\u0438\u043C\u0430\u0442\u044C \u0434\u0440\u0443\u0433\u0438\u043C \u0447\u043B\u0435\u043D\u0430\u043C \u043A\u043E\u043C\u0430\u043D\u0434\u044B.\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"\\n *\u041A\u0430\u043A\u0438\u043C\u0438 \u043D\u0430\u0432\u044B\u043A\u0430\u043C\u0438 \u043E\u0431\u043B\u0430\u0434\u0430\u0435\u0442 \u043A\u0440\u0443\u0442\u043E\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A?* \u2013 \u041A\u0440\u043E\u043C\u0435 \u0442\u0435\u0445\u043D\u0438\u0447\u0435\u0441\u043A\u0438\u0445 \u043D\u0430\u0432\u044B\u043A\u043E\u0432, \u043A\u0440\u0443\u0442\u043E\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A \u043E\u0431\u043B\u0430\u0434\u0430\u0435\u0442 \u00ABsoft skills\u00BB. \u0412 \u043F\u0435\u0440\u0432\u0443\u044E \u043E\u0447\u0435\u0440\u0435\u0434\u044C \u044D\u0442\u043E *\u0443\u043C\u0435\u043D\u0438\u0435 \u043F\u043E\u043C\u043E\u0433\u0430\u0442\u044C* \u0447\u043B\u0435\u043D\u0430\u043C \u043A\u043E\u043C\u0430\u043D\u0434\u044B. \u0420\u0430\u0431\u043E\u0442\u0430\u044F \u0432 \u043A\u043E\u043C\u0430\u043D\u0434\u0435, \u043C\u044B \u043C\u043E\u0436\u0435\u043C \u043F\u0440\u0438\u0443\u043C\u043D\u043E\u0436\u0438\u0442\u044C \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u044B \u0441\u0432\u043E\u0438\u0445 \u0443\u0441\u0438\u043B\u0438\u0439, \u043D\u0430\u0443\u0447\u0438\u0432 \u043B\u044E\u0434\u0435\u0439 \u0442\u043E\u043C\u0443, \u0447\u0442\u043E \u0443\u043C\u0435\u0435\u043C, \u0438 \u0443\u0447\u0430\u0441\u044C \u0443 \u043D\u0438\u0445. \u0412\u0430\u0436\u043D\u043E\u0439 \u0447\u0430\u0441\u0442\u044C\u044E \u044D\u0442\u043E\u0433\u043E \u043D\u0430\u0432\u044B\u043A\u0430 \u0435\u0441\u0442\u044C *\u0443\u043C\u0435\u043D\u0438\u0435 \u043A\u0440\u0438\u0442\u0438\u043A\u043E\u0432\u0430\u0442\u044C \u043A\u043E\u043D\u0441\u0442\u0440\u0443\u043A\u0442\u0438\u0432\u043D\u043E*. \\n\\n*\u041C\u044B \u043D\u0435 \u0433\u043E\u0432\u043E\u0440\u0438\u043C, \u0447\u0442\u043E \u0441\u0434\u0435\u043B\u0430\u043D\u043E \u043F\u043B\u043E\u0445\u043E, \u0430 \u0433\u043E\u0432\u043E\u0440\u0438\u043C, \u0447\u0442\u043E \u043C\u043E\u0436\u043D\u043E \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u043B\u0443\u0447\u0448\u0435 \u0438 \u043F\u043E\u0447\u0435\u043C\u0443!*\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \" ```\u0418\u0442\u043E\u0433\u043E, \u043D\u0430\u0448\u0438 \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u044B: \\n\\t\u0426\u0435\u043B\u044C \u0440\u0430\u0431\u043E\u0442\u044B \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0430 \u2013 \u0437\u0430 \u043C\u0438\u043D\u0438\u043C\u0430\u043B\u044C\u043D\u043E\u0435 \u0432\u0440\u0435\u043C\u044F \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u043C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0435 \u041F\u041E, \u043C\u044B \u0445\u043E\u0442\u0438\u043C \u0441\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0441\u0442\u0432\u043E\u0432\u0430\u0442\u044C \u044D\u0442\u043E\u0442 \u043D\u0430\u0432\u044B\u043A. \\n\\t\u0412\u0437\u0430\u0438\u043C\u043E\u043F\u043E\u043C\u043E\u0449\u044C \u2013 \u043C\u044B \u0440\u0430\u0431\u043E\u0442\u0430\u0435\u043C \u0432 \u043A\u043E\u043C\u0430\u043D\u0434\u0435 \u0438 \u043F\u043E\u043C\u043E\u0433\u0430\u0435\u043C \u0434\u0440\u0443\u0433 \u0434\u0440\u0443\u0433\u0443.\\n\\t\u041A\u043E\u043D\u0441\u0442\u0440\u0443\u043A\u0442\u0438\u0432\u043D\u0430\u044F \u043A\u0440\u0438\u0442\u0438\u043A\u0430 \u2013 \u043C\u044B \u0433\u043E\u0432\u043E\u0440\u0438\u043C, \u0447\u0442\u043E \u043C\u043E\u0436\u043D\u043E \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u043B\u0443\u0447\u0448\u0435, \u0430 \u043D\u0435 \u0447\u0442\u043E \u0441\u0434\u0435\u043B\u0430\u043D\u043E \u043F\u043B\u043E\u0445\u043E.```\"}]},{\"type\": \"context\",\"elements\": [{\"type\": \"mrkdwn\",\"text\": \"`If you agree, enter \\\"I agree\\\" to continue.`\"}]}]";

    agreeMessage =agreeMessage.replace("\t","");
    agreeMessage =agreeMessage.replace("\n","");
    String first = StringEscapeUtils.escapeJava(firstAgreeMessage);
    String second =StringEscapeUtils.escapeJava(secondAgreeMessage);
    String agree = StringEscapeUtils.escapeJava(agreeMessage);

    System.out.println(false);
  }

  @Test
  public void testWhenAddGitName() throws Exception {
    StateMachine<State, Event> machine = factory.getStateMachine();
    StateMachineTestPlan<State, Event> plan =
        StateMachineTestPlanBuilder.<State, Event>builder()
            .defaultAwaitTime(2)
            .stateMachine(machine)
            .step()
            .expectStates(NEW_USER)
            .expectStateChanged(0)
            .and()
            .step()
            .sendEvent(AGREE_LICENSE)
            .expectState(AGREED_LICENSE)
            .expectStateChanged(1)
            .and()
            .step()
            .sendEvent(ADD_GIT_NAME)
            .expectState(ADDED_GIT)
            .expectStateChanged(1)
            .and()
            .build();
    plan.test();
  }

  @Test
  public void testWhenPurchaseComplete() throws Exception {

    StateMachine<State, Event> machine = factory.getStateMachine();
    StateMachineTestPlan<State, Event> plan =
        StateMachineTestPlanBuilder.<State, Event>builder()
            .defaultAwaitTime(2)
            .stateMachine(machine)
            .step()
            .expectStates(NEW_USER)
            .expectStateChanged(0)
            .and()
            .step()
            .sendEvent(AGREE_LICENSE)
            .expectState(AGREED_LICENSE)
            .expectStateChanged(1)
            .and()
            .step()
            .sendEvent(ADD_GIT_NAME)
            .expectState(ADDED_GIT)
            .expectStateChanged(1)
            .and()
            .step()
            .sendEvent(GET_THE_FIRST_TASK)
            .expectState(GOT_THE_FIRST_TASK)
            .expectStateChanged(1)
            .and()
            .build();
    plan.test();
  }
}